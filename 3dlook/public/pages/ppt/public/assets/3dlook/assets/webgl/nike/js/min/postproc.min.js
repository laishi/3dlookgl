THREE.RGBShiftShader={uniforms:{tDiffuse:{type:"t",value:null},angle:{type:"f",value:.815},time:{type:"f",value:0},noise:{type:"f",value:1},colorizeR:{type:"f",value:0},colorizeG:{type:"f",value:0},colorizeB:{type:"f",value:0}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position =  projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform float time;","uniform float noise;","uniform float colorizeR,colorizeG,colorizeB;","float angle=0.0;","varying vec2 vUv;","float random(vec3 scale,float seed){return fract(sin(dot(gl_FragCoord.xyz+seed,scale))*43758.5453+seed);}","void main() {","vec2 center = vec2(0.5,0.5);","vec2 vd = center - vec2(vUv);","float distSQ = vd.x*vd.x + (vd.y*vd.y*0.5);","float ns = 1.0-0.1*( (random( vec3( 0.99 ), length( gl_FragCoord )+time )));","float amount=distSQ*0.005;","vec2 offset = amount * vec2( cos(angle), sin(angle));","vec4 cr = texture2D(tDiffuse, vUv + offset);","vec4 cga = texture2D(tDiffuse, vUv);","vec4 cb = texture2D(tDiffuse, vUv - offset);","gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);","gl_FragColor = (1.0-distSQ) * gl_FragColor;","gl_FragColor *= ns;","if(colorizeR>0.0) gl_FragColor.r*=colorizeR;","if(colorizeG>0.0) gl_FragColor.g*=colorizeG;","if(colorizeB>0.0) gl_FragColor.b*=colorizeB;","}"].join("\n")};