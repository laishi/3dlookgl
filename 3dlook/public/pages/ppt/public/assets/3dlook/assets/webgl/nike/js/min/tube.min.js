THREE.MyTubeGeometry=function(e,t,o,c,r){THREE.Geometry.call(this),this.radius=t=t||50,this.segments=o=void 0!==o?Math.max(3,o):8,this.thetaStart=c=void 0!==c?c:0,this.thetaLength=r=void 0!==r?r:2*Math.PI;var n,s=[];center=new THREE.Vector3,centerUV=new THREE.Vector2(.5,.5);for(var h=0;2>h;h++){var a=t;1==h&&(a=e);for(var n=0;o>n;n++){var E=new THREE.Vector3,i=c+n/o*r;E.x=a*Math.cos(i),E.y=a*Math.sin(i),this.vertices.push(E),s.push(new THREE.Vector2((E.x/a+1)/2,(E.y/a+1)/2))}}var l=new THREE.Vector3(0,0,1);for(n=0;o-1>n;n++){var T=n,p=n+1,u=n+o,v=n+o+1;this.faces.push(new THREE.Face3(T,p,u,[l.clone(),l.clone(),l.clone()])),this.faceVertexUvs[0].push([s[n].clone(),s[n+1].clone(),centerUV.clone()]),this.faces.push(new THREE.Face3(p,v,u,[l.clone(),l.clone(),l.clone()])),this.faceVertexUvs[0].push([s[n].clone(),s[n+1].clone(),centerUV.clone()])}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,t)},THREE.MyTubeGeometry.prototype=Object.create(THREE.Geometry.prototype);